// src/utils/dataTransformers.js - FINAL FIX

export const transformCompanyData = (apiData) => {
  // Handle both direct company config and nested companyConfig
  const companyConfig = {
    ...(apiData.companyConfig || {}),
    ...(apiData.companyId ? {
      companyId: apiData.companyId,
      name: apiData.name,
      // Note: prefer nested companyConfig description fields over root
      description: (apiData.companyConfig && (apiData.companyConfig.companyDescription || apiData.companyConfig.description)) || apiData.description,
      photoUrl: apiData.photoUrl,
      color: apiData.color,
      country: (apiData.companyConfig && apiData.companyConfig.country) || apiData.country || 'MN',
      // Prefer nested arrays from companyConfig; fall back to root-level arrays
      companyAdvantages: (apiData.companyConfig && apiData.companyConfig.companyAdvantages) || apiData.companyAdvantages || [],
      companyBenefits: (apiData.companyConfig && apiData.companyConfig.companyBenefits) || apiData.companyBenefits || []
    } : {})
  };

  console.log('üè¢ Transforming company config:', companyConfig);

  // Get country code
  const country = companyConfig.country || 'MN';

  // Determine translations based on country
  let mnTranslations;
  if (country === 'KZ') {
    // Russian translations for Kazakhstan
    mnTranslations = {
      title: `–†–∞–±–æ—Ç–∞—Ç—å –≤ ${companyConfig.name || 'Company'}`,
      subtitle: '–û—Ç–∫—Ä—ã—Ç—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏',
      findNearby: '–ù–∞–π—Ç–∏ –±–ª–∏–∂–∞–π—à–∏–µ –∫ –¥–æ–º—É',
      selectStores: '–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∏–ª–∏–∞–ª',
      selectPosition: '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–∫–∞–Ω—Å–∏—é',
      availablePositions: '–î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏',
      apply: '–ü–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É',
      urgent: '–°—Ä–æ—á–Ω–æ',
      back: '–ù–∞–∑–∞–¥',
      viewJobs: '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏',
      selected: '–í—ã–±—Ä–∞–Ω–æ',
      myLocation: '–ú–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ',
      nearbyStores: '–§–∏–ª–∏–∞–ª—ã —Ä—è–¥–æ–º —Å –≤–∞–º–∏',
      yourLocation: '–í–∞—à–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ',
      jobsAvailable: '–≤–∞–∫–∞–Ω—Å–∏–π',
      selectedJob: '–í—ã–±—Ä–∞–Ω–Ω–∞—è –≤–∞–∫–∞–Ω—Å–∏—è',
      startInterview: '–ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—é',
      loadingLocation: '–ü–æ–∏—Å–∫ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è...',
      // Error messages
      errorPermissionDenied: 'üîí –¢—Ä–µ–±—É–µ—Ç—Å—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è. –í–∫–ª—é—á–∏—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –±—Ä–∞—É–∑–µ—Ä–∞.',
      errorPermissionDeniedAndroid: 'ü§ñ Android: —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è ‚Üí Chrome/Browser ‚Üí –†–∞–∑—Ä–µ—à–µ–Ω–∏—è ‚Üí –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ ‚Üí "–†–∞–∑—Ä–µ—à–∏—Ç—å".',
      errorPermissionDeniedSafari: 'üì± Safari: —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí Safari ‚Üí –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ ‚Üí "–†–∞–∑—Ä–µ—à–∏—Ç—å".',
      errorPositionUnavailable: 'üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ GPS –∏–ª–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.',
      errorPositionUnavailableAndroid: 'üìç Android: –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –í–∫–ª—é—á–∏—Ç–µ GPS, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.',
      errorTimeout: '‚è±Ô∏è –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ.',
      errorTimeoutAndroid: '‚è±Ô∏è Android: –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ. GPS-—Å–∏–≥–Ω–∞–ª –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–ª–∞–±—ã–º.',
      errorTimeoutSafari: '‚è±Ô∏è Safari: –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ.',
      errorDefault: '‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è.'
    };
  } else if (country === 'UZ') {
    // Uzbek translations for Uzbekistan
    mnTranslations = {
      title: `${companyConfig.name || 'Company'}da ishlash`,
      subtitle: 'Ochiq ish o\'rinlari',
      findNearby: 'Uyga yaqin ishga kirish',
      selectStores: 'Filial tanlang',
      selectPosition: 'Ish o\'rnini tanlang',
      availablePositions: 'Ochiq ish o\'rinlari',
      apply: 'Ishga kirish',
      urgent: 'Shoshilinch',
      back: 'Orqaga',
      viewJobs: 'Ish o\'rinlarini ko\'rish',
      selected: 'Tanlangan',
      myLocation: 'Mening joylashuvim',
      nearbyStores: 'Sizga yaqin filiallar',
      yourLocation: 'Sizning joylashuvingiz',
      jobsAvailable: 'ish o\'rni',
      selectedJob: 'Tanlangan ish o\'rni',
      startInterview: 'Suhbatga o\'tish',
      loadingLocation: 'Joylashuv qidirilmoqda...',
      // Error messages
      errorPermissionDenied: 'üîí Joylashuvni aniqlash uchun ruxsat kerak. Brauzer sozlamalaridan joylashuvni yoqing.',
      errorPermissionDeniedAndroid: 'ü§ñ Android: joylashuvni aniqlash uchun ruxsat kerak. Sozlamalar ‚Üí Ilovalar ‚Üí Chrome/Browser ‚Üí Ruxsatlar ‚Üí Joylashuv ‚Üí "Ruxsat berish".',
      errorPermissionDeniedSafari: 'üì± Safari: joylashuvni aniqlash uchun ruxsat kerak. Sozlamalar ‚Üí Safari ‚Üí Joylashuv ‚Üí "Ruxsat berish".',
      errorPositionUnavailable: 'üìç Joylashuv topilmadi. GPS yoki internet aloqasini tekshiring va qaytadan urinib ko\'ring.',
      errorPositionUnavailableAndroid: 'üìç Android: joylashuv topilmadi. GPS-ni yoqing, internetni tekshiring va qaytadan urinib ko\'ring.',
      errorTimeout: '‚è±Ô∏è Kutish vaqti tugadi.',
      errorTimeoutAndroid: '‚è±Ô∏è Android: kutish vaqti tugadi. GPS signali zaif bo\'lishi mumkin.',
      errorTimeoutSafari: '‚è±Ô∏è Safari: kutish vaqti tugadi.',
      errorDefault: '‚ùå Joylashuvni aniqlashda xatolik.'
    };
  } else {
    // Default Mongolian translations
    mnTranslations = {
      title: `${companyConfig.name || 'Company'}-–¥ –∞–∂–∏–ª–ª–∞—Ö`,
      subtitle: '–ê–∂–ª—ã–Ω –±–∞–π—Ä –Ω—ç—ç–ª—Ç—Ç—ç–π',
      findNearby: '–ì—ç—Ä—Ç –æ–π—Ä –∞–∂–∏–ª–¥ –æ—Ä—ä—ë',
      selectStores: '–°–∞–ª–±–∞—Ä —Å–æ–Ω–≥–æ–æ—Ä–æ–π',
      selectPosition: '–ê–∂–ª—ã–Ω –±–∞–π—Ä —Å–æ–Ω–≥–æ—Ö',
      availablePositions: '–ù—ç—ç–ª—Ç—Ç—ç–π –∞–∂–ª—ã–Ω –±–∞–π—Ä—É—É–¥',
      apply: '–ê–∂–∏–ª–¥ –æ—Ä—ä—ë',
      urgent: '–Ø–∞—Ä–∞–ª—Ç–∞–π',
      back: '–ë—É—Ü–∞—Ö',
      viewJobs: '–ê–∂–ª—ã–Ω –±–∞–π—Ä —Ö–∞—Ä–∞—Ö',
      selected: '–°–æ–Ω–≥–æ–≥–¥—Å–æ–Ω',
      myLocation: '–ú–∏–Ω–∏–π –±–∞–π—Ä—à–∏–ª',
      nearbyStores: '–¢–∞–Ω—ã –æ–π—Ä–æ–ª—Ü–æ–æ—Ö —Å–∞–ª–±–∞—Ä—É—É–¥',
      yourLocation: '–¢–∞–Ω—ã –±–∞–π—Ä—à–∏–ª',
      jobsAvailable: '–∞–∂–ª—ã–Ω –±–∞–π—Ä',
      selectedJob: '–°–æ–Ω–≥–æ—Å–æ–Ω –∞–∂–ª—ã–Ω –±–∞–π—Ä',
      startInterview: '–®—É—É–¥ —è—Ä–∏–ª—Ü–ª–∞–≥–∞–¥ –æ—Ä–æ—Ö',
      loadingLocation: '–ë–∞–π—Ä—à–∏–ª —Ö–∞–π–∂ –±–∞–π–Ω–∞...',
      // Error messages
      errorPermissionDenied: 'üîí –ë–∞–π—Ä—à–∏–ª –∑”©–≤—à”©”©—Ä”©—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π. –•”©—Ç—á–∏–π–Ω —Ç–æ—Ö–∏—Ä–≥–æ–æ–Ω–æ–æ—Å –±–∞–π—Ä—à–ª—ã–≥ –∏–¥—ç–≤—Ö–∂“Ø“Ø–ª–Ω—ç “Ø“Ø.',
      errorPermissionDeniedAndroid: 'ü§ñ Android –¥—ç—ç—Ä –±–∞–π—Ä—à–∏–ª –∑”©–≤—à”©”©—Ä”©—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π. –¢–æ—Ö–∏—Ä–≥–æ–æ ‚Üí –ê–ø–ø–ª–∏–∫–µ–π—à–Ω ‚Üí Chrome/Browser ‚Üí –ó”©–≤—à”©”©—Ä”©–ª ‚Üí –ë–∞–π—Ä—à–∏–ª ‚Üí "–ó”©–≤—à”©”©—Ä”©—Ö" –≥—ç–∂ —Å–æ–Ω–≥–æ–Ω–æ —É—É.',
      errorPermissionDeniedSafari: 'üì± Safari –¥—ç—ç—Ä –±–∞–π—Ä—à–∏–ª –∑”©–≤—à”©”©—Ä”©—Ö —à–∞–∞—Ä–¥–ª–∞–≥–∞—Ç–∞–π. –¢–æ—Ö–∏—Ä–≥–æ–æ ‚Üí Safari ‚Üí –ë–∞–π—Ä—à–∏–ª ‚Üí "–ó”©–≤—à”©”©—Ä”©—Ö" –≥—ç–∂ —Å–æ–Ω–≥–æ–Ω–æ —É—É.',
      errorPositionUnavailable: 'üìç –ë–∞–π—Ä—à–∏–ª –æ–ª–¥–æ—Ö–≥“Ø–π –±–∞–π–Ω–∞. GPS —ç—Å–≤—ç–ª –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Ö–æ–ª–±–æ–ª—Ç–æ–æ —à–∞–ª–≥–∞–∞–¥ –¥–∞—Ö–∏–Ω –æ—Ä–æ–ª–¥–æ–Ω–æ —É—É.',
      errorPositionUnavailableAndroid: 'üìç Android –¥—ç—ç—Ä –±–∞–π—Ä—à–∏–ª –æ–ª–¥–æ—Ö–≥“Ø–π –±–∞–π–Ω–∞. GPS-–∏–π–≥ –∏–¥—ç–≤—Ö–∂“Ø“Ø–ª–∂, –∏–Ω—Ç–µ—Ä–Ω–µ—Ç —Ö–æ–ª–±–æ–ª—Ç–æ–æ —à–∞–ª–≥–∞–∞–¥ –¥–∞—Ö–∏–Ω –æ—Ä–æ–ª–¥–æ–Ω–æ —É—É.',
      errorTimeout: '‚è±Ô∏è –ë–∞–π—Ä—à–∏–ª —Ö“Ø–ª—ç—ç—Ö —Ö—É–≥–∞—Ü–∞–∞ –¥—É—É—Å—Å–∞–Ω.',
      errorTimeoutAndroid: '‚è±Ô∏è Android –¥—ç—ç—Ä –±–∞–π—Ä—à–∏–ª —Ö“Ø–ª—ç—ç—Ö —Ö—É–≥–∞—Ü–∞–∞ –¥—É—É—Å—Å–∞–Ω. GPS —Å–∏–≥–Ω–∞–ª —Å—É–ª –±–∞–π–∂ –±–æ–ª–∑–æ—à–≥“Ø–π.',
      errorTimeoutSafari: '‚è±Ô∏è Safari –¥—ç—ç—Ä –±–∞–π—Ä—à–∏–ª —Ö“Ø–ª—ç—ç—Ö —Ö—É–≥–∞—Ü–∞–∞ –¥—É—É—Å—Å–∞–Ω.',
      errorDefault: '‚ùå –ë–∞–π—Ä—à–∏–ª —Ç–æ–¥–æ—Ä—Ö–æ–π–ª–æ—Ö–æ–¥ –∞–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞.'
    };
  }

  return {
    companyId: companyConfig.companyId || 'company',
    brandName: companyConfig.name || 'Company',
    subdomain: `${companyConfig.name || 'company'}.oneplace.hr`,
    brandColor: companyConfig.color || '#3b82f6',
    brandGradient: companyConfig.color
      ? `linear-gradient(135deg, ${companyConfig.color}99 0%, ${companyConfig.color} 100%)`
      : 'linear-gradient(135deg, #0a1929 0%, #1e3a8a 25%, #1e40af 50%, #2563eb 75%, #3b82f6 100%)',
    logo: companyConfig.name || 'Company',
    photoUrl: companyConfig.photoUrl,
    description: companyConfig.companyDescription || companyConfig.description || '',
    companyAdvantages: companyConfig.companyAdvantages || [],
    companyBenefits: companyConfig.companyBenefits || [],
    country: country,
    maxStoreSelection: 1,
    features: {
      hasShiftPreferences: true,
      requiresExperience: false,
      hasUrgentPositions: true,
      allowsMultipleApplications: false
    },
    translations: {
      mn: mnTranslations,
      en: {
        title: `Work at ${companyConfig.name || 'Company'}`,
        subtitle: 'Open positions available',
        findNearby: 'Find Stores Near Me',
        selectStores: 'Select branch',
        selectPosition: 'Select Position',
        availablePositions: 'Available Positions',
        apply: 'Apply',
        urgent: 'Urgent',
        back: 'Back',
        viewJobs: 'View Jobs',
        selected: 'Selected',
        myLocation: 'My Location',
        nearbyStores: 'Stores Near You',
        yourLocation: 'Your Location',
        jobsAvailable: 'jobs available',
        selectedJob: 'Selected Job',
        startInterview: 'Start Interview',
        loadingLocation: 'Finding your location...'
      }
    }
  };
};

export const transformStoreData = (apiBranches) => {
  if (!apiBranches || apiBranches.length === 0) {
    console.log('‚ùå No branches data to transform');
    return [];
  }

  console.log('üîÑ Transforming branches:', apiBranches.length, 'branches');
  
  const transformedStores = apiBranches.map(branch => {
    console.log(`üè¢ Processing branch: ${branch.branchName} (ID: ${branch.branchId})`);
    console.log('üìç Branch data:', branch);
    
    // Parse coordinates if they exist
    let lat = 47.9187; // Default Ulaanbaatar center
    let lng = 106.9177;
    let hasValidCoordinates = false;
    
    if (branch.coordinates && branch.coordinates !== null && branch.coordinates.trim() !== '') {
      try {
        // Handle both string and array formats for coordinates
        let coordParts = [];
        if (Array.isArray(branch.coordinates)) {
          coordParts = branch.coordinates;
        } else {
          coordParts = branch.coordinates.split(',').map(coord => coord.trim());
        }
        
        if (coordParts.length === 2) {
          const parsedLat = parseFloat(coordParts[0]);
          const parsedLng = parseFloat(coordParts[1]);
          
          if (!isNaN(parsedLat) && !isNaN(parsedLng)) {
            lat = parsedLat;
            lng = parsedLng;
            hasValidCoordinates = true;
            console.log(`‚úÖ Valid coordinates found: ${lat}, ${lng}`);
          }
        }
      } catch (error) {
        console.warn(`‚ö†Ô∏è Failed to parse coordinates for branch ${branch.branchId}:`, branch.coordinates, error);
      }
    } else {
      console.log(`üìç No coordinates for branch: ${branch.branchName}`);
    }

    // Transform jobs to positions
    const positions = branch.jobs && Array.isArray(branch.jobs) 
      ? branch.jobs.map((job, index) => ({
          id: job.jobId || `pos_${branch.branchId}_${index}`,
          title: job.jobName || 'Position',
          urgent: index === 0, // First job is urgent for demo
          salaryRange: job.salary ? `‚ÇÆ${parseInt(job.salary).toLocaleString()}` : '–¶–∞–ª–∏–Ω —Ç–æ—Ö–∏—Ä–æ–ª—Ü–æ–Ω–æ',
          description: `${job.jobName || '–ê–∂–ª—ã–Ω –±–∞–π—Ä'} - –¥—ç–ª–≥—ç—Ä—ç–Ω–≥“Ø–π –º—ç–¥—ç—ç–ª—ç–ª`,
          requirements: ['–¢—É—Ä—à–ª–∞–≥–∞ —à–∞–∞—Ä–¥–∞–≥–¥–∞—Ö–≥“Ø–π', '–≠–µ—Ä—ç–≥ —Ö–∞–Ω–¥–ª–∞–≥–∞', '–ë–∞–≥–∞–∞—Ä –∞–∂–∏–ª–ª–∞—Ö —á–∞–¥–≤–∞—Ä'],
          storeId: branch.branchId,
          positionId: job.jobId,
          branchName: branch.branchName
        }))
      : [];

    const transformedStore = {
      id: branch.branchId,
      name: branch.branchName || `–°–∞–ª–±–∞—Ä ${branch.branchId}`,
      lat: lat,
      lng: lng,
      address: branch.address || branch.branchAddress || branch.location || 'Address not provided',
      positions: positions,
      hasValidCoordinates: hasValidCoordinates,
      // Add these for compatibility
      managerId: `mgr_${branch.branchId}`,
      district: hasValidCoordinates ? '' : 'Remote',
      phone: '',
      openingHours: '09:00-18:00'
    };

    console.log(`‚úÖ Transformed store:`, transformedStore.name, `- ${transformedStore.positions.length} positions, coordinates: ${hasValidCoordinates}`);
    return transformedStore;
  });

  console.log(`‚úÖ Transformation complete: ${transformedStores.length} stores total`);
  console.log(`üìç Stores with coordinates: ${transformedStores.filter(s => s.hasValidCoordinates).length}`);
  console.log(`üè¢ Store names:`, transformedStores.map(s => s.name));

  return transformedStores;
};

export const transformPositionData = (apiPositions) => {
  return apiPositions.map(position => ({
    id: position.id || position.position_id,
    title: position.title || position.position_title,
    urgent: position.urgent || position.is_urgent || false,
    salaryRange: position.salary_range || position.salary || '–¶–∞–ª–∏–Ω: –•–∞—Ä–∏–ª—Ü–∞–Ω —Ç–æ—Ö–∏—Ä–æ–ª—Ü–æ–Ω–æ',
    description: position.description || '',
    requirements: position.requirements || [],
    benefits: position.benefits || [],
    shiftType: position.shift_type || '',
    employmentType: position.employment_type || 'full-time',
    experienceRequired: position.experience_required || false,
    openingsCount: position.openings_count || 1
  }));
};